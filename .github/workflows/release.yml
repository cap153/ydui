name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-linux-gnu:
    name: Build Linux GNU
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build binary
        run: cargo build --release

      - name: Prepare binary
        shell: bash
        run: |
          mkdir -p release
          cp target/release/ydui release/ydui_linux_gnu

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: release/*

  build-linux-musl:
    name: Build Linux MUSL
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apk add --no-cache curl rust cargo

      - name: Build binary
        run: cargo build --release

      - name: Prepare binary
        run: |
          mkdir -p release
          cp target/release/ydui release/ydui_linux_musl

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: release/*

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build binary
        run: cargo build --release

      - name: Prepare binary
        shell: bash
        run: |
          mkdir -p release
          cp target/release/ydui.exe release/ydui_windows.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: release/*

  release:
    name: Create Release
    needs: [build-linux-gnu, build-linux-musl, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: release

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
